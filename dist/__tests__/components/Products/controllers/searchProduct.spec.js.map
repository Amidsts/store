{"version":3,"file":"searchProduct.spec.js","sourceRoot":"src/","sources":["__tests__/components/Products/controllers/searchProduct.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import request from \"supertest\";\n\nimport app, {\n  initializeDatabase,\n  initializeMiddlewares,\n  initializeRoutes,\n} from \"../../../../app\";\nimport AuthModel from \"../../../../components/Auth/auth.model\";\nimport { closeMongoDb } from \"../../../../configs/database\";\nimport { saveTestData } from \"../../Auth/authTestData\";\nimport { saveProductTestData } from \"../productTestData\";\nimport ProductModel from \"../../../../components/Products/product.model\";\nimport * as response from \"../../../../utils/response\";\nimport mongoose from \"mongoose\";\n\ndescribe(\"Search a product\", () => {\n  let user: any, product: any, token: string;\n  beforeAll(async () => {\n    await initializeDatabase();\n    initializeMiddlewares();\n    initializeRoutes();\n\n    user = await saveTestData().userAuth.save();\n    token = user.generateToken({ data: { ref: user._id, role: user.role } });\n  });\n\n  describe(\"Should find a product By Id\", () => {\n    const randomId = new mongoose.Types.ObjectId();\n\n    it(\"Should find a product By Id and throw error that product does not exist\", async () => {\n      const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n\n      const { body, status } = await request(app)\n        .get(`/v1/product?productId=${randomId}`)\n        .set(\"Authorization\", `Bearer ${token}`);\n\n      expect(responseHandlerSpy).toHaveBeenCalled();\n      expect(body.message).toBe(\"product does not exist\");\n      expect(status).toBe(400);\n    });\n\n    it(\"Should find a product By Id and returns it\", async () => {\n      product = await saveProductTestData().product(user._id).save();\n      const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n\n      const { body, status } = await request(app)\n        .get(`/v1/product?productId=${product._id}`)\n        .set(\"Authorization\", `Bearer ${token}`);\n\n      expect(responseHandlerSpy).toHaveBeenCalled();\n      expect(body.message).toBe(\"product retrieved successfully\");\n      expect(status).toBe(200);\n    });\n  });\n\n  it(\"Should search for products that match some texts\", async () => {\n    const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n\n    const { body, status } = await request(app)\n      .get(`/v1/product?search=sfe`)\n      .set(\"Authorization\", `Bearer ${token}`);\n\n    expect(responseHandlerSpy).toHaveBeenCalled();\n    expect(body.message).toBe(\"products retrieved successfully\");\n    expect(status).toBe(200);\n  });\n\n  it(\"Should find all the products in the database and retrieve them\", async () => {\n    const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n\n    const { body, status } = await request(app)\n      .get(`/v1/product`)\n      .set(\"Authorization\", `Bearer ${token}`);\n\n    expect(responseHandlerSpy).toHaveBeenCalled();\n    expect(body.message).toBe(\"products retrieved successfully\");\n    expect(status).toBe(200);\n  })\n\n  afterAll(async () => {\n    jest.restoreAllMocks();\n\n    await AuthModel.deleteMany();\n    await ProductModel.deleteMany();\n    await closeMongoDb();\n  });\n});\n"]}