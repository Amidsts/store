{"version":3,"file":"initiatePayment.spec.js","sourceRoot":"src/","sources":["__tests__/components/transactions/controllers/initiatePayment.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import request from \"supertest\";\n\nimport app, {\n  initializeDatabase,\n  initializeMiddlewares,\n  initializeRoutes,\n} from \"../../../../app\";\nimport AuthModel from \"../../../../components/Auth/auth.model\";\nimport ProductModel from \"../../../../components/Products/product.model\";\nimport { closeMongoDb } from \"../../../../configs/database\";\nimport { saveTestData } from \"../../Auth/authTestData\";\nimport * as response from \"../../../../utils/response\";\nimport { paymentData, saveTxTestData } from \"../paymentTestData\";\nimport mongoose from \"mongoose\";\nimport { saveProductTestData } from \"../../Products/productTestData\";\nimport TxModel from \"../../../../components/transactions/transaction.model\";\nimport * as payment from \"../../../../components/transactions/transaction.utils\";\n\ndescribe(\"Initiate payment\", () => {\n  let user: any, product: any, token: string;\n  beforeAll(async () => {\n    await initializeDatabase();\n    initializeMiddlewares();\n    initializeRoutes();\n\n    user = await saveTestData().userAuth.save();\n    token = user.generateToken({\n      data: { ref: user._id, role: user.role },\n    });\n  });\n\n  it(\"Should find a product by Id and throw error that product is not found\", async () => {\n    const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n    const randomId = new mongoose.Types.ObjectId();\n\n    const { body, status } = await request(app)\n      .post(`/v1/tx/payment`)\n      .send(paymentData(String(randomId)))\n      .set(\"Authorization\", `Bearer ${token}`)\n      .set(\"Content-Type\", \"application/json\");\n\n    expect(responseHandlerSpy).toHaveBeenCalled();\n    expect(body.message).toBe(\"product not found\");\n    expect(status).toBe(404);\n  });\n\n  it(\"Should find a product by Id and throw error, because the loggedInUser is the owner of the product\", async () => {\n    product = await saveProductTestData().product(user._id).save();\n    const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n\n    const { body, status } = await request(app)\n      .post(`/v1/tx/payment`)\n      .send(paymentData(String(product._id)))\n      .set(\"Authorization\", `Bearer ${token}`)\n      .set(\"Content-Type\", \"application/json\");\n\n    expect(responseHandlerSpy).toHaveBeenCalled();\n    expect(body.message).toBe(\"you can not buy your own product\");\n    expect(status).toBe(400);\n  });\n\n  it(\"Should throw error indicating that 'product is out of stock or quantity is too high'\", async () => {\n    const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n    product.User = new mongoose.Types.ObjectId()\n    await product.save()\n\n    const { body, status } = await request(app)\n      .post(`/v1/tx/payment`)\n      .send({ ...paymentData(String(product._id)), quantity: 10000 })\n      .set(\"Authorization\", `Bearer ${token}`)\n      .set(\"Content-Type\", \"application/json\");\n\n    expect(responseHandlerSpy).toHaveBeenCalled();\n    expect(body.message).toBe(\n      \"product is out of stock or quantity is too high\"\n    );\n    expect(status).toBe(400);\n  });\n\n  it(\"Should throw error indicating that payment has been completed\", async () => {\n    await saveTxTestData().transaction(product, user._id).save();\n    const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n\n    const { body, status } = await request(app)\n      .post(`/v1/tx/payment`)\n      .send(paymentData(String(product._id)))\n      .set(\"Authorization\", `Bearer ${token}`)\n      .set(\"Content-Type\", \"application/json\");\n\n    expect(responseHandlerSpy).toHaveBeenCalled();\n    expect(body.message).toBe(\"This payment has already been completed\");\n    expect(status).toBe(400);\n  });\n\n  it(\"Should make payment and return a successful response\", async () => {\n    await TxModel.deleteMany();\n    const responseHandlerSpy = jest.spyOn(response, \"responseHandler\");\n\n    const createCustomerSpy = jest.spyOn(payment, \"createCustomer\");\n    const initializePaymentSpy = jest.spyOn(payment, \"initializePayment\");\n\n    const { body, status } = await request(app)\n      .post(`/v1/tx/payment`)\n      .send(paymentData(String(product._id)))\n      .set(\"Authorization\", `Bearer ${token}`)\n      .set(\"Content-Type\", \"application/json\");\n\n    expect(createCustomerSpy).toHaveBeenCalled();\n    expect(initializePaymentSpy).toHaveBeenCalled();\n    expect(responseHandlerSpy).toHaveBeenCalled();\n    expect(body.message).toBe(\"successful\");\n    expect(status).toBe(200);\n  });\n\n  afterAll(async () => {\n    jest.restoreAllMocks();\n\n    await AuthModel.deleteMany();\n    await ProductModel.deleteMany();\n    await TxModel.deleteMany();\n    await closeMongoDb();\n  });\n});\n"]}