{"version":3,"file":"database.js","sourceRoot":"src/","sources":["configs/database.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,wDAAoD;AAEpD,yCAA0B;AAE1B,SAAe,cAAc;;QAC3B,MAAM,OAAO,GAAG;YACd,MAAM,EAAE,CAAC;SACQ,CAAC;QAEpB,IAAI,CAAC;YACH,MAAM,kBAAQ,CAAC,OAAO,CAAC,UAAS,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACpC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,gCAAgC,GAAG,KAAK,CAAC,CAAC;YACtD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC;IACH,CAAC;CAAA;AAED,kBAAe,cAAc,CAAC;AAE9B,SAAsB,YAAY;;QAChC,MAAM,kBAAQ,CAAC,UAAU,EAAE,CAAC;QAE5B,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IACvC,CAAC;CAAA;AAJD,oCAIC","sourcesContent":["import mongoose, { ConnectOptions } from \"mongoose\";\n\nimport appConfig from \".\";\n\nasync function connectMongoDb(): Promise<void> {\n  const options = {\n    family: 4,\n  } as ConnectOptions;\n\n  try {\n    await mongoose.connect(appConfig.mongoDbUri, options);\n    console.log(\"Database connected\");\n  } catch (error) {\n    console.log(\"Error connecting to database: \" + error);\n    process.exit(1);\n  }\n}\n\nexport default connectMongoDb;\n\nexport async function closeMongoDb(): Promise<void> {\n  await mongoose.disconnect();\n\n  console.log(\"Database disconnected\");\n}"]}