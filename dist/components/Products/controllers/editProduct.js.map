{"version":3,"file":"editProduct.js","sourceRoot":"src/","sources":["components/Products/controllers/editProduct.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,sDAA0D;AAI1D,qEAA4C;AAE5C,SAAe,WAAW,CAAC,GAAa,EAAE,GAAa;;QACrD,MAAM,EACJ,SAAS,EACT,IAAI,EACJ,QAAQ,EACR,WAAW,EACX,KAAK,EACL,eAAe,GAChB,GAAsC,GAAG,CAAC,IAAI,CAAC;QAEhD,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC;YAEH,MAAM,OAAO,GAAG,MAAM,uBAAY,CAAC,OAAO,CAAC;gBACzC,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,IAAI,CAAC,GAAG;aACf,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACb,OAAO,IAAA,0BAAe,EAAC;oBACrB,GAAG;oBACH,OAAO,EAAE,6BAA6B;iBACvC,CAAC,CAAC;YACL,CAAC;YAED,MAAM,iBAAiB,GAAG,MAAM,uBAAY,CAAC,IAAI,CAAC;gBAChD,IAAI,EAAE,IAAI,CAAC,GAAG;gBACd,IAAI;gBACJ,QAAQ;aACT,CAAC,CAAC;YACH,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACjC,OAAO,IAAA,0BAAe,EAAC;oBACrB,GAAG;oBACH,OAAO,EAAE,wCAAwC;oBACjD,MAAM,EAAE,GAAG;iBACZ,CAAC,CAAC;YACL,CAAC;YAED,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC5B,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC;YAClC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YACtB,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;YAE1C,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;YACrB,OAAO,IAAA,0BAAe,EAAC;gBACrB,GAAG;gBACH,OAAO,EAAE,8BAA8B;gBACvC,IAAI,EAAE,OAAO;aACd,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAA,0BAAe,EAAC;gBACd,GAAG;gBACH,GAAG;gBACH,OAAO,EAAE,uBAAuB;gBAChC,MAAM,EAAE,GAAG;aACZ,CAAC,CAAC;QACL,CAAC;IACH,CAAC;CAAA;AAED,kBAAe,WAAW,CAAC","sourcesContent":["import { Response } from \"express\";\nimport { responseHandler } from \"../../../utils/response\";\nimport { IRequest } from \"../../../utils/types\";\nimport { z } from \"zod\";\nimport { editProductSchema } from \"../product.validators\";\nimport ProductModel from \"../product.model\";\n\nasync function editProduct(req: IRequest, res: Response) {\n  const {\n    productId,\n    name,\n    category,\n    description,\n    price,\n    quantityInStock,\n  }: z.infer<typeof editProductSchema> = req.body;\n\n  const { user } = req;\n  try {\n\n    const product = await ProductModel.findOne({\n      _id: productId,\n      User: user._id,\n    });\n    if (!product) {\n      return responseHandler({\n        res,\n        message: \"this product does not exist\",\n      });\n    }\n\n    const duplicateProducts = await ProductModel.find({\n      User: user._id,\n      name,\n      category,\n    });\n    if (duplicateProducts.length > 1) {\n      return responseHandler({\n        res,\n        message: \"a product with this name already exist\",\n        status: 400,\n      });\n    }\n\n    product.name = name;\n    product.category = category;\n    product.description = description;\n    product.price = price;\n    product.quantityInStock = quantityInStock;\n\n    await product.save();\n    return responseHandler({\n      res,\n      message: \"product updated successfully\",\n      data: product,\n    });\n  } catch (err) {\n    responseHandler({\n      res,\n      err,\n      message: \"Internal Server Error\",\n      status: 500,\n    });\n  }\n}\n\nexport default editProduct;\n"]}