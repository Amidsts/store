{"version":3,"file":"createProduct.js","sourceRoot":"src/","sources":["components/Products/controllers/createProduct.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,sDAA0D;AAI1D,qEAA4C;AAE5C,SAAe,aAAa,CAAC,GAAa,EAAE,GAAa;;QACvD,MAAM,EACJ,IAAI,EACJ,QAAQ,EACR,WAAW,EACX,KAAK,EACL,eAAe,GAChB,GAAwC,GAAG,CAAC,IAAI,CAAC;QAElD,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC;QACrB,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,uBAAY,CAAC,OAAO,CAAC;gBACzC,IAAI,EAAE,IAAI,CAAC,GAAG;gBACd,IAAI;gBACJ,QAAQ;aACT,CAAC,CAAC;YAEH,IAAI,OAAO,EAAE,CAAC;gBACZ,OAAO,IAAA,0BAAe,EAAC;oBACrB,GAAG;oBACH,OAAO,EAAE,6BAA6B;oBACtC,MAAM,EAAE,GAAG;iBACZ,CAAC,CAAC;YACL,CAAC;YAED,MAAM,UAAU,GAAG,MAAM,IAAI,uBAAY,CAAC;gBACxC,IAAI,EAAE,IAAI,CAAC,GAAG;gBACd,IAAI;gBACJ,QAAQ;gBACR,WAAW;gBACX,KAAK;gBACL,eAAe;aAChB,CAAC,CAAC,IAAI,EAAE,CAAC;YAEV,OAAO,IAAA,0BAAe,EAAC;gBACrB,GAAG;gBACH,OAAO,EAAE,8BAA8B;gBACvC,IAAI,EAAE;oBACJ,OAAO,EAAE,UAAU;iBACpB;aACF,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAA,0BAAe,EAAC;gBACd,GAAG;gBACH,GAAG;gBACH,OAAO,EAAE,0BAA0B,GAAG,CAAC,OAAO,EAAE;gBAChD,MAAM,EAAE,GAAG;aACZ,CAAC,CAAC;QACL,CAAC;IACH,CAAC;CAAA;AAED,kBAAe,aAAa,CAAC","sourcesContent":["import { Response } from \"express\";\nimport { responseHandler } from \"../../../utils/response\";\nimport { IRequest } from \"../../../utils/types\";\nimport { z } from \"zod\";\nimport { createProductSchema } from \"../product.validators\";\nimport ProductModel from \"../product.model\";\n\nasync function createProduct(req: IRequest, res: Response) {\n  const {\n    name,\n    category,\n    description,\n    price,\n    quantityInStock,\n  }: z.infer<typeof createProductSchema> = req.body;\n\n  const { user } = req;\n  try {\n    const product = await ProductModel.findOne({\n      User: user._id,\n      name,\n      category,\n    });\n\n    if (product) {\n      return responseHandler({\n        res,\n        message: \"this product already exists\",\n        status: 400,\n      });\n    }\n\n    const newProduct = await new ProductModel({\n      User: user._id,\n      name,\n      category,\n      description,\n      price,\n      quantityInStock,\n    }).save();\n\n    return responseHandler({\n      res,\n      message: \"product created successfully\",\n      data: {\n        product: newProduct,\n      },\n    });\n  } catch (err) {\n    responseHandler({\n      res,\n      err,\n      message: `Internal Server Error: ${err.message}`,\n      status: 500,\n    });\n  }\n}\n\nexport default createProduct;\n"]}