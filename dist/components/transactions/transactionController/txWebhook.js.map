{"version":3,"file":"txWebhook.js","sourceRoot":"src/","sources":["components/transactions/transactionController/txWebhook.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,8DAAiC;AAEjC,sDAA0D;AAE1D,+DAAyC;AAEzC,MAAM,EAAE,cAAc,EAAE,GAAG,iBAAS,CAAC;AAErC,SAAe,gBAAgB,CAAC,GAAa,EAAE,GAAa;;QAC1D,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;QACtB,IAAI,CAAC;YACH,MAAM,IAAI,GAAG,qBAAM;iBAChB,UAAU,CAAC,QAAQ,EAAE,cAAc,CAAC;iBACpC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;iBAChC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjB,IAAI,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,sBAAsB,CAAC,EAAE,CAAC;gBAChD,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;gBAE3B,OAAO,CAAC,GAAG,CAAC,mBAAmB,KAAK,EAAE,CAAC,CAAC;gBAExC,IAAI,KAAK,KAAK,kBAAkB,EAAE,CAAC;oBACjC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;gBAClE,CAAC;YACH,CAAC;YAGD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE5B,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAA,0BAAe,EAAC;gBACd,GAAG;gBACH,GAAG;gBACH,OAAO,EAAE,2BAA2B,GAAG,CAAC,OAAO,EAAE;gBACjD,MAAM,EAAE,GAAG;aACZ,CAAC,CAAC;QACL,CAAC;IACH,CAAC;CAAA;AAED,kBAAe,gBAAgB,CAAC","sourcesContent":["import { Response } from \"express\";\nimport crypto from \"node:crypto\";\n\nimport { responseHandler } from \"../../../utils/response\";\nimport { IRequest } from \"../../../utils/types\";\nimport appConfig from \"../../../configs\";\n\nconst { paystackSecret } = appConfig;\n\nasync function txWebhookHandler(req: IRequest, res: Response) {\n  console.log(\"webhook\")\n  try {\n    const hash = crypto\n      .createHmac(\"sha512\", paystackSecret)\n      .update(JSON.stringify(req.body))\n      .digest(\"hex\");\n    if (hash == req.headers[\"x-paystack-signature\"]) {\n      const { event } = req.body;\n\n      console.log(`Paystack event  ${event}`);\n\n      if (event === \"transfer.success\") {\n        return res.status(200).json({ message: \"Transfer successful\" });\n      } \n    }\n\n    \n    res.status(200).send(200);\n\n  } catch (err) {\n    responseHandler({\n      res,\n      err,\n      message: `Internal Server Error:  ${err.message}`,\n      status: 500,\n    });\n  }\n}\n\nexport default txWebhookHandler;\n"]}