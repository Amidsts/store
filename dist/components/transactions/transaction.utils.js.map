{"version":3,"file":"transaction.utils.js","sourceRoot":"src/","sources":["components/transactions/transaction.utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,kDAA0B;AAE1B,4DAAsC;AAEtC,MAAM,EAAE,cAAc,EAAE,GAAG,iBAAS,CAAC;AAErC,SAAsB,cAAc,CAAC,IAAW;;QAC9C,IAAI,CAAC;YACH,MAAM,cAAc,GAAG,MAAM,eAAK,CAAC,GAAG,CACpC,oCAAoC,IAAI,CAAC,KAAK,EAAE,EAChD;gBACE,OAAO,EAAE;oBACP,aAAa,EAAE,UAAU,cAAc,EAAE;iBAC1C;aACF,CACF,CAAC;YAEF,IAAI,CAAC,cAAc,EAAE,CAAC;gBACpB,MAAM,eAAK,CAAC,IAAI,CACd,kCAAkC,EAClC;oBACE,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,UAAU,EAAE,IAAI,CAAC,SAAS;oBAC1B,SAAS,EAAE,IAAI,CAAC,QAAQ;oBACxB,KAAK,EAAE,IAAI,CAAC,OAAO;iBACpB,EACD;oBACE,OAAO,EAAE;wBACP,aAAa,EAAE,UAAU,cAAc,EAAE;wBACzC,cAAc,EAAE,kBAAkB;qBACnC;iBACF,CACF,CAAC;YACJ,CAAC;YACD,OAAO;QACT,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;CAAA;AAhCD,wCAgCC;AAED,SAAsB,iBAAiB;yDAAC,EACtC,KAAK,EACL,MAAM,EACN,QAAQ,GAKT;QACC,IAAI,CAAC;YACH,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,eAAK,CAAC,IAAI,CAC/B,gDAAgD,EAChD;gBACE,KAAK;gBACL,MAAM;gBACN,QAAQ;aACT,EACD;gBACE,OAAO,EAAE;oBACP,aAAa,EAAE,UAAU,cAAc,EAAE;oBACzC,cAAc,EAAE,kBAAkB;iBACnC;aACF,CACF,CAAC;YAEF,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;CAAA;AA7BD,8CA6BC","sourcesContent":["import axios from \"axios\";\nimport { IAuth } from \"../Auth/auth.model\";\nimport appConfig from \"../../configs\";\n\nconst { paystackSecret } = appConfig;\n\nexport async function createCustomer(user: IAuth) {\n  try {\n    const customerExists = await axios.get(\n      `https://api.paystack.co/customer/${user.email}`,\n      {\n        headers: {\n          Authorization: `Bearer ${paystackSecret}`,\n        },\n      }\n    );\n\n    if (!customerExists) {\n      await axios.post(\n        \"https://api.paystack.co/customer\",\n        {\n          email: user.email,\n          first_name: user.firstName,\n          last_name: user.lastName,\n          phone: user.phoneNo,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${paystackSecret}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n    }\n    return;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function initializePayment({\n  email,\n  amount,\n  currency,\n}: {\n  email: string;\n  amount: string;\n  currency: string;\n}) {\n  try {\n    const { data } = await axios.post(\n      \"https://api.paystack.co/transaction/initialize\",\n      {\n        email,\n        amount,\n        currency,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${paystackSecret}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"]}