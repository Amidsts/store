{"version":3,"file":"transaction.model.js","sourceRoot":"src/","sources":["components/transactions/transaction.model.ts"],"names":[],"mappings":";;AAAA,uCAA0D;AAgB1D,MAAM,QAAQ,GAAG,IAAI,iBAAM,CAAM;IAC/B,cAAc,EAAE,MAAM;IACtB,QAAQ,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;IAC/B,KAAK,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;IAC5B,OAAO,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;IAC9B,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;KACrB;IACD,SAAS,EAAE,MAAM;IACjB,QAAQ,EAAE,MAAM;IAChB,UAAU,EAAE,MAAM;IAClB,MAAM,EAAE;QACN,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,SAAS,EAAE,YAAY,EAAE,QAAQ,CAAC;KAC1C;IACD,gBAAgB,EAAE,MAAM;IACxB,WAAW,EAAE,MAAM;CACpB,CAAC,CAAC;AAEH,MAAM,OAAO,GAAG,IAAA,gBAAK,EAAM,aAAa,EAAE,QAAQ,CAAC,CAAC;AACpD,kBAAe,OAAO,CAAC","sourcesContent":["import { Document, Schema, Types, model } from \"mongoose\";\n\ninterface ITx extends Document {\n  idempotencyKey: string;\n  Supplier: Types.ObjectId;\n  Buyer: Types.ObjectId;\n  Product: Types.ObjectId;\n  currency: \"NGN\" | \"USD\";\n  unitPrice: number;\n  quantity: number;\n  totalPrice: number;\n  status: \"pending\" | \"successful\" | \"failed\";\n  paymentReference: string;\n  paymentLink: string;\n}\n\nconst txSchema = new Schema<ITx>({\n  idempotencyKey: String,\n  Supplier: Schema.Types.ObjectId,\n  Buyer: Schema.Types.ObjectId,\n  Product: Schema.Types.ObjectId,\n  currency: {\n    type: String,\n    enum: [\"NGN\", \"USD\"],\n  },\n  unitPrice: Number,\n  quantity: Number,\n  totalPrice: Number,\n  status: {\n    type: String,\n    enum: [\"pending\", \"successful\", \"failed\"],\n  },\n  paymentReference: String,\n  paymentLink: String,\n});\n\nconst TxModel = model<ITx>(\"Transaction\", txSchema);\nexport default TxModel;\n"]}