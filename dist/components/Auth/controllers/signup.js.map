{"version":3,"file":"signup.js","sourceRoot":"src/","sources":["components/Auth/controllers/signup.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAIA,sDAA0D;AAE1D,+DAAsC;AAGtC,SAAe,MAAM,CAAC,GAAa,EAAE,GAAa;;QAChD,MAAM,EACJ,SAAS,EACT,QAAQ,EACR,KAAK,EACL,QAAQ,EACR,OAAO,GACR,GAAiC,GAAG,CAAC,IAAI,CAAC;QAE3C,IAAI,CAAC;YACH,MAAM,YAAY,GAAG,MAAM,oBAAS,CAAC,OAAO,CAAC;gBAC3C,KAAK;aACN,CAAC,CAAC;YAEH,IAAI,YAAY,EAAE,CAAC;gBACjB,OAAO,IAAA,0BAAe,EAAC;oBACrB,GAAG;oBACH,OAAO,EAAE,6CAA6C;oBACtD,MAAM,EAAE,GAAG;iBACZ,CAAC,CAAC;YACL,CAAC;YAED,MAAM,IAAI,oBAAS,CAAC;gBAClB,SAAS;gBACT,QAAQ;gBACR,QAAQ,EAAE,GAAG,SAAS,IAAI,QAAQ,EAAE;gBACpC,OAAO;gBACP,KAAK;gBACL,QAAQ;aACT,CAAC,CAAC,IAAI,EAAE,CAAC;YAEV,OAAO,IAAA,0BAAe,EAAC;gBACrB,GAAG;gBACH,OAAO,EAAE,+BAA+B;aACzC,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,IAAA,0BAAe,EAAC;gBACd,GAAG;gBACH,GAAG;gBACH,OAAO,EAAE,2BAA2B,GAAG,CAAC,OAAO,EAAE;gBACjD,MAAM,EAAE,GAAG;aACZ,CAAC,CAAC;QACL,CAAC;IACH,CAAC;CAAA;AAED,kBAAe,MAAM,CAAC","sourcesContent":["import { Response } from \"express\";\nimport { startSession } from \"mongoose\";\nimport { z } from \"zod\";\n\nimport { responseHandler } from \"../../../utils/response\";\nimport { signUpSchema } from \"../auth.validators\";\nimport AuthModel from \"../auth.model\";\nimport { IRequest } from \"../../../utils/types\";\n\nasync function signUp(req: IRequest, res: Response) {\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    phoneNo,\n  }: z.infer<typeof signUpSchema> = req.body;\n\n  try {\n    const existingUser = await AuthModel.findOne({\n      email,\n    });\n\n    if (existingUser) {\n      return responseHandler({\n        res,\n        message: \"Account already exists,please Login instead\",\n        status: 409,\n      });\n    }\n\n    await new AuthModel({\n      firstName,\n      lastName,\n      fullName: `${firstName} ${lastName}`,\n      phoneNo,\n      email,\n      password,\n    }).save();\n\n    return responseHandler({\n      res,\n      message: \"account created, please login\",\n    });\n  } catch (err) {\n    responseHandler({\n      res,\n      err,\n      message: `Internal Server Error:  ${err.message}`,\n      status: 500,\n    });\n  }\n}\n\nexport default signUp;\n"]}