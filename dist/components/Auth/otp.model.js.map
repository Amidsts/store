{"version":3,"file":"otp.model.js","sourceRoot":"src/","sources":["components/Auth/otp.model.ts"],"names":[],"mappings":";;AAAA,uCAA0D;AAY1D,MAAM,SAAS,GAAG,IAAI,iBAAM,CAC1B;IACE,IAAI,EAAE;QACJ,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,QAAQ,EAAE,IAAI;IACd,OAAO,EAAE;QACP,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,gBAAgB,CAAC;QACxB,QAAQ,EAAE,IAAI;KACf;IACD,UAAU,EAAE,OAAO;CACpB,EACD,EAAE,UAAU,EAAE,IAAI,EAAE,CACrB,CAAC;AAEF,MAAM,QAAQ,GAAG,IAAA,gBAAK,EAAO,KAAK,EAAE,SAAS,CAAC,CAAC;AAC/C,kBAAe,QAAQ,CAAA","sourcesContent":["import { Schema, Document, model, Types } from \"mongoose\";\n\ntype otpPurposes = \"reset_password\";\n\nexport interface IOtp extends Document {\n  User: Types.ObjectId;\n  code: string;\n  expireAt: Date;\n  purpose: otpPurposes;\n  isVerified: boolean;\n}\n\nconst otpSchema = new Schema<IOtp>(\n  {\n    User: {\n      type: Schema.Types.ObjectId,\n      ref: \"User\",\n    },\n    code: {\n      type: String,\n      required: true,\n    },\n    expireAt: Date,\n    purpose: {\n      type: String,\n      enum: [\"reset_password\"],\n      required: true,\n    },\n    isVerified: Boolean,\n  },\n  { timestamps: true }\n);\n\nconst OtpModel = model<IOtp>(\"Otp\", otpSchema);\nexport default OtpModel"]}