{"version":3,"file":"app.js","sourceRoot":"src/","sources":["app.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,gDAAwB;AACxB,sDAAgF;AAChF,oDAA4B;AAE5B,kEAAgD;AAChD,+CAAmD;AACnD,gFAAuD;AACvD,sGAAoE;AACpE,0FAAiE;AAEjE,MAAM,GAAG,GAAgB,IAAA,iBAAO,GAAE,CAAC;AAE5B,MAAM,kBAAkB,GAAG,GAAS,EAAE;IAC3C,IAAA,kBAAc,GAAE,CAAC,KAAK,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC7E,CAAC,CAAA,CAAC;AAFW,QAAA,kBAAkB,sBAE7B;AAEK,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,MAAM,cAAc,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAEjD,MAAM,WAAW,GAAG;QAClB,MAAM,EAAE,UACN,MAA0B,EAC1B,QAAsD;YAEtD,IAAI,CAAC,MAAM,IAAI,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;gBACrD,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvB,CAAC;iBAAM,CAAC;gBACN,QAAQ,CAAC,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC;QACD,WAAW,EAAE,IAAI;KAClB,CAAC;IAEF,GAAG;SACA,GAAG,CAAC,IAAA,cAAI,EAAC,WAAW,CAAC,CAAC;SACtB,GAAG,CAAC,iBAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;SACpC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;SAC3D,GAAG,CAAC,IAAA,gBAAM,GAAE,CAAC;SACb,GAAG,CAAC,CAAC,GAAQ,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACjE,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;YAC7B,GAAG,CAAC,MAAM,CACR,8BAA8B,EAC9B,+BAA+B,CAChC,CAAC;YAEF,OAAO,IAAA,0BAAe,EAAC;gBACrB,GAAG;gBACH,MAAM,EAAE,GAAG;gBACX,OAAO,EAAE,uBAAuB;aACjC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,YAAY,WAAW,EAAE,CAAC;YAC3C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC1B,OAAO,EAAE,+CAA+C;aACzD,CAAC,CAAC;QACL,CAAC;QAED,OAAO,IAAI,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AA5CW,QAAA,qBAAqB,yBA4ChC;AAEK,MAAM,gBAAgB,GAAG,GAAG,EAAE;IACnC,GAAG;SACA,GAAG,CAAC,UAAU,EAAE,qBAAU,CAAC;SAC3B,GAAG,CAAC,QAAQ,EAAE,4BAAQ,CAAC;SACvB,GAAG,CAAC,aAAa,EAAE,wBAAa,CAAC,CAAC;IAErC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACxB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,GAAa,EAAE,EAAE,CACnC,IAAA,0BAAe,EAAC;QACd,GAAG;QACH,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,yDAAyD;KACnE,CAAC,CACH,CAAC;AACJ,CAAC,CAAC;AAjBW,QAAA,gBAAgB,oBAiB3B;AAIF,kBAAe,GAAG,CAAC","sourcesContent":["import cors from \"cors\";\nimport express, { Application, NextFunction, Response, Request } from \"express\";\nimport helmet from \"helmet\";\n\nimport connectMongoDb from \"./configs/database\";\nimport { responseHandler } from \"./utils/response\";\nimport authRouter from \"./components/Auth/auth.routes\";\nimport txRouter from \"./components/transactions/transaction.routes\";\nimport productRouter from \"./components/Products/product.routes\";\n\nconst app: Application = express();\n\nexport const initializeDatabase = async () => {\n  connectMongoDb().catch((err: any) => console.log(`error: ${err.message}`));\n};\n\nexport const initializeMiddlewares = () => {\n  const allowedOrigins = [\"http://localhost:5173\"];\n\n  const corsOptions = {\n    origin: function (\n      origin: string | undefined,\n      callback: (err: Error | null, allow?: boolean) => void\n    ) {\n      if (!origin || allowedOrigins.indexOf(origin) !== -1) {\n        callback(null, true);\n      } else {\n        callback(new Error(\"Not allowed by CORS\"));\n      }\n    },\n    credentials: true,\n  };\n\n  app\n    .use(cors(corsOptions))\n    .use(express.json({ limit: \"50kb\" }))\n    .use(express.urlencoded({ limit: \"50kb\", extended: false }))\n    .use(helmet())\n    .use((err: any, req: Request, res: Response, next: NextFunction) => {\n      if (req.method === \"OPTIONS\") {\n        res.header(\n          \"Access-Control-Allow-Methods\",\n          \"POST, PUT, PATCH, GET, DELETE\"\n        );\n\n        return responseHandler({\n          res,\n          status: 403,\n          message: \"Invalid header method\",\n        });\n      }\n\n      if (req.body && err instanceof SyntaxError) {\n        return res.status(400).json({\n          message: \"Malformed JSON, check the body of the request\",\n        });\n      }\n\n      return next();\n    });\n};\n\nexport const initializeRoutes = () => {\n  app\n    .use(\"/v1/auth\", authRouter)\n    .use(\"/v1/tx\", txRouter)\n    .use(\"/v1/product\", productRouter);\n\n  app.get(\"/\", (req, res) => {\n    res.status(200).json({ message: \"welcome to The Store\" });\n  });\n\n  app.all(\"*\", (_req, res: Response) =>\n    responseHandler({\n      res,\n      status: 404,\n      message: \"You have used an invalid method or hit an invalid route\",\n    })\n  );\n};\n\n\n\nexport default app;\n"]}