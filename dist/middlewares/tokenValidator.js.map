{"version":3,"file":"tokenValidator.js","sourceRoot":"src/","sources":["middlewares/tokenValidator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA,gEAA+B;AAC/B,yDAAmC;AACnC,gDAAoD;AAEpD,MAAM,aAAa,GAAG,CACpB,GAAa,EACb,GAAa,EACb,IAAkB,EAClB,EAAE;IACF,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,aAAuB,CAAC;IAChD,KAAK,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAEtC,IAAI,CAAC,KAAK;QAAE,OAAO,IAAI,EAAE,CAAC;IAE1B,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,iBAAS,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACnE,GAAG,CAAC,OAAO,GAAG,OAAiB,CAAC;QAEhC,OAAO,IAAI,EAAE,CAAC;IAChB,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC;YACb,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;gBACrC,OAAO,IAAA,0BAAe,EAAC;oBACrB,GAAG;oBACH,OAAO,EAAE,eAAe;oBACxB,MAAM,EAAE,GAAG;oBACX,GAAG;iBACJ,CAAC,CAAC;YACL,CAAC;iBAAM,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;gBAC5C,OAAO,IAAA,0BAAe,EAAC;oBACrB,GAAG;oBACH,OAAO,EAAE,4CAA4C;oBACrD,MAAM,EAAE,GAAG;oBACX,GAAG;iBACJ,CAAC,CAAC;YACL,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC,CAAA,CAAC;AAEF,kBAAe,aAAa,CAAC","sourcesContent":["import { NextFunction, Response } from \"express\";\nimport { IRequest, IToken } from \"../utils/types\";\nimport jwt from \"jsonwebtoken\";\nimport appConfig from \"../configs\";\nimport { responseHandler } from \"../utils/response\";\n\nconst validateToken = async (\n  req: IRequest,\n  res: Response,\n  next: NextFunction\n) => {\n  let token = req.headers.authorization as string;\n  token = token?.replace(\"Bearer \", \"\");\n\n  if (!token) return next();\n\n  try {\n    const decoded = jwt.verify(token, appConfig.authConfigs.jwtSecret);\n    req.decoded = decoded as IToken;\n\n    return next();\n  } catch (err) {\n    if (err.name) {\n      if (err.name === \"JsonWebTokenError\") {\n        return responseHandler({\n          res,\n          message: \"invalid token\",\n          status: 401,\n          err,\n        });\n      } else if (err.name === \"TokenExpiredError\") {\n        return responseHandler({\n          res,\n          message: \"authentication expired. Please login again\",\n          status: 401,\n          err,\n        });\n      }\n    }\n  }\n};\n\nexport default validateToken;\n"]}